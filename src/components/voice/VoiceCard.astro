---
import './VoiceCard.scss';

interface Props {
  petName: string;
  petGender: string;
  petThumbnail: string;
  ownerName: string;
  animalType: string;
  store: string;
  voiceContent: string;
  class?: string;
}
const { petName, petGender, petThumbnail = '', ownerName, animalType, store = '', voiceContent, class: className = '' } = Astro.props;

function truncateText(text: string, max: number) {
  return text.length > max ? text.slice(0, max) + '...' : text;
}
// public配下のnoimage.webpを参照
const thumbnail = typeof petThumbnail === 'object' && petThumbnail !== null
  ? petThumbnail.url
  : (petThumbnail ? petThumbnail : '/noimage.webp');
---
<div class={`voice-card ${className}`}>
  <div class="voice-card-img-wrap">
    <img src={thumbnail} alt={petName} class="voice-card-img" loading="lazy" />
  </div>
  <div class="voice-card-body">
    <div class="voice-card-title-row">
      <span class="voice-card-petname">{petName}</span>
    </div>
    <div class="voice-card-owner-row">
      <span class="voice-card-owner">{ownerName} 様</span>
    </div>
    <div class="voice-card-meta-table">
      <div class="voice-card-meta-label">品種</div>
      <div class="voice-card-meta-value">{animalType}</div>
      <div class="voice-card-meta-label">お迎え店舗</div>
      <div class="voice-card-meta-value">{
        typeof store === 'object' && store !== null
          ? (store.name || store.storeName || JSON.stringify(store))
          : store || ''
      }</div>
    </div>
    <div class="voice-card-content">{truncateText(voiceContent.replace(/<[^>]+>/g, ''), 40)}</div>
  </div>
</div> 