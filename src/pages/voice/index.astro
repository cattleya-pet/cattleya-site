---
import Layout from '../../layouts/Layout.astro';
import HeroSection from '../../components/sections/common/HeroSection.astro';
import VoiceCard from '../../components/voice/VoiceCard.astro';
import ViewMoreButton from '../../components/ui/buttons/ViewMoreButton.astro';
import BannerSection from '../../components/sections/common/BannerSection.astro';
import ContactCTASection from '../../components/sections/common/ContactCTASection.astro';
import { getVoices } from '../../lib/api/voice';
import '../../styles/pages/voice.scss';

// 全てのお客様の声を取得（SSG対応）
console.log('=== Voice データ取得開始 ===');
const allVoices = await getVoices(100, 0); // 100件まで取得
console.log('All voices:', allVoices.length);
console.log('First voice:', allVoices[0]);

// 初期表示用（最初の10件）
const initialVoices = allVoices.slice(0, 10);
console.log('Initial voices:', initialVoices.length);

// パンくずリストのデータ
const breadcrumbItems = [
  { label: 'ホーム', href: '/' },
  { label: 'お客様の声' }
];
---

<Layout title="お客様の声 | Cattleya(カトレア)" description="カトレアでペットをお迎えいただいたお客様からの声をご紹介します。ペットの可愛さ、ペットとお客様の出会い、ペットとお客様のつながりについて記載しています。">
  <main>
    <HeroSection 
      title="お客様の声"
      image="/images/backgrounds/img_bg-hero_voice-01.webp"
      breadcrumbItems={breadcrumbItems}
    />
    
    <section class="voice-section">
      <div class="container">
        <div class="voice-grid" data-all-voices={JSON.stringify(allVoices)}>
          {initialVoices.map((voice) => (
            <div class="voice-card-wrapper">
              <VoiceCard {...voice} />
            </div>
          ))}
        </div>
        {allVoices.length > 10 && <ViewMoreButton />}
      </div>
    </section>
    
    <BannerSection />
    
    <ContactCTASection />
  </main>
</Layout>

<script>
  let currentIndex = 10;
  const allVoices = JSON.parse(document.querySelector('.voice-grid')?.dataset.allVoices || '[]');
  const viewMoreButton = document.getElementById('viewMoreButton') as HTMLButtonElement;
  const voiceGrid = document.querySelector('.voice-grid') as HTMLElement;

  if (viewMoreButton && voiceGrid) {
    viewMoreButton.addEventListener('click', () => {
      const nextVoices = allVoices.slice(currentIndex, currentIndex + 10);
      
      nextVoices.forEach((voice: any) => {
        const thumbnailUrl = typeof voice.petThumbnail === 'object' && voice.petThumbnail !== null
          ? voice.petThumbnail.url
          : (voice.petThumbnail || '/images/ui/img_loading-pet-image-01.webp');
        
        const storeDisplay = typeof voice.store === 'object' && voice.store !== null
          ? (voice.store.name || voice.store.storeName || JSON.stringify(voice.store))
          : voice.store || '';
        
        const truncatedContent = (voice.voiceContent || '').replace(/<[^>]+>/g, '');
        const displayContent = truncatedContent.length > 40 ? truncatedContent.slice(0, 40) + '...' : truncatedContent;
        
        const voiceCardHTML = `
          <div class="voice-card-wrapper">
            <a href="/voice/${voice.id}" class="voice-card">
              <div class="voice-card-img-wrap">
                <img src="${thumbnailUrl}" alt="${voice.petName}" class="voice-card-img" loading="lazy" />
              </div>
              <div class="voice-card-body">
                <div class="voice-card-title-row">
                  <span class="voice-card-petname">${voice.petName}</span>
                </div>
                <div class="voice-card-owner-row">
                  <span class="voice-card-owner">${voice.ownerName} 様</span>
                </div>
                <div class="voice-card-meta-table">
                  <div class="voice-card-meta-label">品種</div>
                  <div class="voice-card-meta-value">${voice.animalType}</div>
                  <div class="voice-card-meta-label">お迎え店舗</div>
                  <div class="voice-card-meta-value">${storeDisplay}</div>
                </div>
                <div class="voice-card-content">${displayContent}</div>
              </div>
            </a>
          </div>
        `;
        voiceGrid.insertAdjacentHTML('beforeend', voiceCardHTML);
      });

      currentIndex += 10;
      
      if (currentIndex >= allVoices.length) {
        viewMoreButton.style.display = 'none';
      }
    });
  }
</script>

