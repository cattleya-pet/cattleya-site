---
import Layout from '../../layouts/Layout.astro';
import PetCard from '../../components/pets/PetCard.astro';
import PetTabs from '../../components/pets/PetTabs.astro';
import HeroSection from '../../components/sections/common/HeroSection.astro';
import ViewMoreButton from '../../components/ui/buttons/ViewMoreButton.astro';
import BannerSection from '../../components/sections/common/BannerSection.astro';
import ContactCTASection from '../../components/sections/common/ContactCTASection.astro';
import { getAllLatestPets, getLatestPetsByType } from '../../lib/api/pets/queries';
import '../../styles/layout/pets-grid.scss';

// 全てのペットデータを取得（SSG対応）
const allPets = await getAllLatestPets();
const initialPets = allPets.slice(0, 24);
// タブ切り替え用に犬と猫の全データを取得
const dogs = await getLatestPetsByType('dog');
const cats = await getLatestPetsByType('cat');

// パンくずリストのデータ
const breadcrumbItems = [
  { label: 'ホーム', href: '/' },
  { label: '子犬・子猫を探す' }
];
---

<Layout title="ペットを探す | Cattleya(カトレア)">
  <main>
    <HeroSection 
      title="子犬・子猫を探す"
      image="/images/backgrounds/img_bg-hero_search-01.webp"
      breadcrumbItems={breadcrumbItems}
    />
    <section class="pets-section">
      <div class="container">
        <PetTabs activeTab="all" />
        <div class="pets-count" id="pets-count">
          <span class="pets-count__number">{allPets.length}</span><span class="pets-count__unit">件</span>
        </div>
        <div
          class="pets-grid"
          data-all-pets={JSON.stringify(allPets)}
          data-dogs={JSON.stringify(dogs)}
          data-cats={JSON.stringify(cats)}
        >
          {initialPets.map((pet) => <PetCard pet={pet} />)}
        </div>
        <ViewMoreButton />
      </div>
    </section>
    
    <BannerSection />
    <ContactCTASection />
  </main>
</Layout>

<script>
  import { getImageUrl } from '../../lib/utils/image';
  import { formatDate } from '../../lib/utils/date';

  // 静的データを取得
  const allPetsData = JSON.parse(document.querySelector('.pets-grid')?.dataset.allPets || '[]');
  const dogsData = JSON.parse(document.querySelector('.pets-grid')?.dataset.dogs || '[]');
  const catsData = JSON.parse(document.querySelector('.pets-grid')?.dataset.cats || '[]');

  // タブごとのインデックス管理
  let indices = {
    all: 24,
    dog: 24,
    cat: 24
  };

  // PetTabsからアクセス可能にするためにwindowオブジェクトに保存
  window.indices = indices;
  let currentTab = 'all';

  const viewMoreButton = document.getElementById('viewMoreButton') as HTMLButtonElement;
  const petsGrid = document.querySelector('.pets-grid') as HTMLElement;

  if (viewMoreButton && petsGrid) {
    viewMoreButton.addEventListener('click', () => {
      let dataSource = allPetsData;
      if (currentTab === 'dog') dataSource = dogsData;
      if (currentTab === 'cat') dataSource = catsData;

      const nextPets = dataSource.slice(indices[currentTab], indices[currentTab] + 18);
      
      nextPets.forEach((pet: any) => {
        const petCardHTML = `
          <div class="pet-card" data-animal-type="${pet.animalType}">
            <a href="/search/${pet.animalType}s/${pet.classification === 'mix' ? 'mix/' : ''}${encodeURIComponent((pet.breedTypeEn || '').toLowerCase())}/${pet.id}" class="pet-card__link">
              <div class="pet-card__inner">
                <div class="pet-card__image-container">
                  <img
                    class="pet-card__image"
                    src="${getImageUrl(pet.imageUrl01, 600, 600)}"
                    alt="${pet.breedTypeJa}の写真"
                    loading="lazy"
                    width="600"
                    height="600"
                    onerror="this.src='/images/ui/img_loading-pet-image-01.webp'"
                  />
                </div>
                <div class="pet-card__info">
                  <h3 class="pet-card__title">
                    ${pet.breedTypeJa}
                    ${pet.gender === '男の子' ? '<img class="pet-card__gender male" src="/icons/icon_male.png" alt="男性" />' : ''}
                    ${pet.gender === '女の子' ? '<img class="pet-card__gender female" src="/icons/icon_female.png" alt="女性" />' : ''}
                  </h3>
                  <div class="pet-card__details">
                    <p class="pet-card__detail-item">カラー：${pet.color}</p>
                    <p class="pet-card__detail-item">誕生日：${formatDate(pet.birthday)}</p>
                    <p class="pet-card__detail-item">店舗：${pet.storeName}</p>
                  </div>
                </div>
              </div>
            </a>
          </div>
        `;
        petsGrid.insertAdjacentHTML('beforeend', petCardHTML);
      });

      indices[currentTab] += 18;
      
      if (indices[currentTab] >= dataSource.length) {
        viewMoreButton.style.display = 'none';
      }
    });
  }

  // タブ切り替え時の処理
  document.addEventListener('tabChanged', (event: any) => {
    currentTab = event.detail.tab;
    let dataSource = allPetsData;
    if (currentTab === 'dog') dataSource = dogsData;
    if (currentTab === 'cat') dataSource = catsData;
    
    // インデックスを24にリセット
    indices[currentTab] = 24;
    window.indices = indices; // windowオブジェクトも更新
    
    if (viewMoreButton) {
      if (indices[currentTab] >= dataSource.length) {
        viewMoreButton.style.display = 'none';
      } else {
        viewMoreButton.style.display = 'flex';
      }
    }
  });
</script>

<style lang="scss">
  @import '../../styles/variables';
  @import '../../styles/mixins';

  .pets-section {
    @include section-padding;
    background-color: $color-background;
    min-height: calc(100vh - 400px);
  }
</style>
